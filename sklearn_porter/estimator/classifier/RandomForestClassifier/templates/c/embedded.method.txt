{methods}

int {method_name} (float features[], float probabilities[]) {{
    int n_classes = {n_classes};
    int n_trees= {n_estimators};

    int classes[n_classes];

    for (int i = 0; i < n_classes; i++) {{
        classes[i] = 0;
    }}

    {method_calls}

    int class_idx = 0;
    int class_val = classes[0];

    for (int i = 0; i < n_classes; i++) {{
        probabilities[i] = probabilities[i] / (float) n_trees;
        // printf("probas[%d] = %6.3f", i, probabilities[i]);

        if (classes[i] > class_val) {{
            class_idx = i;
            class_val = classes[i];
        }}
    }}

    return class_idx;
}}
